<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tree</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
height = 1500-random(1000); // 5 - 15 meters
leaves_height = 250;
stump_height = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>barkwidth = height / 100;
barkwidth = 5

d3d_draw_cylinder(x+height/100,y+height/100,0, x-height/100,y-height/100,height, global.TEX[T_BARK],1,5,false,6);
d3d_draw_cone(x+height/100,y+height/100,0, x-height/100,y-height/100,stump_height, global.TEX[T_BARK],1,1,false,6);

d3d_draw_wall(x+height/10,y,leaves_height, x-height/10,y,height+10, global.TEX[T_PINE],1,1);
d3d_draw_wall(x,y+height/10,leaves_height, x,y-height/10,height+10, global.TEX[T_PINE],1,1);
d3d_draw_wall(x+height/10,y+height/10,leaves_height, x-height/10,y-height/10,height+10, global.TEX[T_PINE],1,1);
d3d_draw_wall(x+height/10,y-height/10,leaves_height, x-height/10,y+height/10,height+10, global.TEX[T_PINE],1,1);


//if (view_current == 0) {
//    d3d_draw_cone(x-barkwidth/2,y-barkwidth/2,0,x+barkwidth/2,y+barkwidth/2,height/2,tex_bark,4,height/100,1,32);
//}
//d3d_draw_floor(x-barkwidth*4,0,height/3,x+barkwidth*4,0,height,tex_pinetree,1,1);
//d3d_draw_floor(0,y+barkwidth*4,height/3,0,y+barkwidth*4,height,tex_pinetree,1,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
