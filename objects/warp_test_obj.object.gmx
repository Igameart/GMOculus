<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*ChromaAbCorrection = {1.000000000, 0.00000000000, 1.00000000, 0.000000000}
DistortionK = {1.00000000, 0.220000000, 0.240000000, 0.000000000}
Scale = {0.250000000, 0.5 * AspectRatio, 0.000000000, 0.000000000}
ScaleIn = {4.00000000, 2 / AspectRatio, 0.000000000, 0.000000000}
Left Screen Center = {0.250000000, 0.500000000, 0.000000000, 0.000000000}
Left Lens Center = {0.287994117, 0.500000000, 0.000000000, 0.000000000}
Right Screen Center = {0.750000000, 0.500000000, 0.000000000, 0.000000000}
Right Lens Center = {0.712005913, 0.500000000, 0.000000000, 0.000000000}*/

//AspectRatio = 768/480;

/*shader_set_uniform_f(LensCenter,0.5, 0.5)
shader_set_uniform_f(ScreenCenter,0.5, 0.5)
shader_set_uniform_f(Scale,0.25, 0.5 * AspectRatio)
shader_set_uniform_f(ScaleIn,0.0, 2 / AspectRatio)
shader_set_uniform_f(HmdWarpParam,1.0, 0.22, 0.24, 0.0)*/


//define_warp("left");

passedTextureLeft = shader_get_sampler_index(hmdwarp_shader, "passedTextureLeft")
passedTextureRight = shader_get_sampler_index(hmdwarp_shader, "passedTextureRight")


event_user(0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
vleft=surface_create(sprite_get_width(test_spr),sprite_get_height(test_spr));
vright=surface_create(sprite_get_width(test_spr),sprite_get_height(test_spr));
wholesurface = surface_create(view_wview[0],view_hview[0]);

surface_set_target(vleft)
draw_sprite_ext(test_spr,0,0,0,1,1,0,c_white,1);
surface_reset_target()

surface_set_target(vright)
draw_sprite_ext(test_spr,1,0,0,1,1,0,c_white,1);
surface_reset_target()

spr_TextureLeft = surface_get_texture(vleft);
spr_TextureRight = surface_get_texture(vright);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(wholesurface);
    draw_clear(c_black);
    
    if surface_exists(vleft)=false then event_user(0);
    
    shader_set(hmdwarp_shader);
    
    //draw_sprite_stretched(sprite_index,0,0,0,768,480)
    
    texture_set_stage(passedTextureLeft, spr_TextureLeft);
    texture_set_stage(passedTextureRight, spr_TextureRight);
    draw_sprite_stretched(blank_spr,0,0,0,view_wview,view_hview)
    
    shader_reset();
surface_reset_target();

draw_surface_ext(wholesurface,300,300,0.6,0.6,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>384,384</point>
  </PhysicsShapePoints>
</object>
